AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks.

Parameters:
  # PipelineName:
  #   Description: A name for pipeline
  #   Type: String
  TemplateFileName:
    Default: main/cloudformation.yaml
    Description: The file name of the WordPress template
    Type: String
  StackName:
    Default: spring-stack-gitops
    Description: A name for the production WordPress stack
    Type: String
  # StackConfig:
  #   Default: stack-configuration.yaml
  #   Description: The configuration file name for the production WordPress stack
  #   Type: String
  ChangeSetName:
    Default: UpdatePreview-SpringApp
    Description: A name for the production WordPress stack change set
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      # - Label:
      #     default: "CodePipeline Settings"
      #   Parameters:
      #     - PipelineName
      - Label:
          default: "Production Stack Settings"
        Parameters:
          - ChangeSetName
          - StackName
          - StackConfig

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "ArtifactStoreBucket"
        Type: S3
      DisableInboundStageTransitions: []
      Name: "Gitops-pipeline" #!Ref "PipelineName"
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: "Source"
          Actions:
            - Name: "TemplateSource"
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeStarSourceConnection"
                Version: "1"
              Configuration:
                BranchName: "main"
                ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
                FullRepositoryId: "jzaccone/elastic-beanstalk-gitops"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: "TemplateSource"
              Region: !Ref AWS::Region
              Namespace: "SourceVariables"
              RunOrder: 1
        - Name: ProdStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref StackName
                ChangeSetName: !Ref ChangeSetName
                # TemplateConfiguration: !Sub "TemplateSource::${StackConfig}"
                TemplatePath: !Sub "TemplateSource::${TemplateFileName}"
              RunOrder: "1"
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                CustomData: !Sub "A new change set was created for the ${StackName} stack. Do you want to implement the changes?"
              RunOrder: "2"
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref StackName
              RunOrder: "3"
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "ec2:*"
                Effect: Allow
                Resource: "*"

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:*"
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "iam:PassRole"
                Effect: Allow
                Resource: "*"
        - PolicyName: GithubConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "codestar-connections:UseConnection"
                Effect: Allow
                Resource: "arn:aws:codestar-connections:us-east-1:384408301901:connection/fd93dc2b-3ec1-4a99-99bf-9cba4d26159d"
