version: 0.2
env:
  git-credential-helper: yes
  variables:
    EB_APP: "CFT-deploy-from-cli"
    S3_BUCK: "the-build-artifacts"

phases:
  # install:
  #   runtime-versions:
  #     docker: 18
  #     java: corretto8
  #   commands:
  #     - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain uzurv --domain-owner 371707344195 --query authorizationToken --output text`
  #     - cp ci/maven/settings.xml /root/.m2/settings.xml
  build:
    commands:
      # Add new EB application
      - echo Entered the build phase for git commit hash $GIT_HASH... and $EnvName
      - aws elasticbeanstalk create-application-version --application-name "$EB_APP" --version-label "$GIT_HASH" --source-bundle S3Bucket="$S3_BUCK",S3Key="springboot-$GIT_HASH.war" || true

      # Change gitops repo to new version
      - git checkout main
      - git config --global user.email "john.zaccone@gmail.com"
      - git config --global user.name "John Zaccone"

      # Create gitops env if it doesn't exist for branch
      - |
        if [ ! -d $EnvName ]; then
          mkdir $EnvName
          echo '{"Parameters" : {"ElasticBeanstalkEnvName" : '$EnvName',"ElasticBeanstalkApp" : "CFT-deploy-from-cli", "ElasticBeanstalkAppVersion" : "toBeReplaced"}}' > $EnvName/stack-config.json
        fi

      # Change gitops repo to new version
      - cat <<< $(jq '.Parameters.ElasticBeanstalkAppVersion = "'$GIT_HASH'"' $EnvName/stack-config.json ) > $EnvName/stack-config.json
      - git add .
      - git commit -m "deploying new version from CD automation"
      - git push --set-upstream origin main

  post_build:
    commands:
      - echo Build completed on `date`
